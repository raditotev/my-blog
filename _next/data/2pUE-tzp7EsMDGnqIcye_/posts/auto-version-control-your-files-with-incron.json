{"pageProps":{"post":{"id":"auto-version-control-your-files-with-incron","title":"Auto Version Control Your Files with incron","date":"2022-07-24T00:00:00.000Z","description":"Read this article if you want to trigger git push to remote repo when files change in a specified location.","categories":["devops","github"],"markdown":"\nThis article's intention is to provide instructions on setting auto version control for a given location. If you want to learn more about `incron` I suggest you visit the [official page](https://inotify.aiken.cz/?section=incron&page=doc&lang=en) and [github](https://github.com/ar-/incron).\n\nIf you want to follow along I have prepared a `Dockerfile` you can use to build an image, you can then use to spin a container:  \n<sub>ℹ️ you should have [Docker](https://docs.docker.com/get-docker/) installed</sub>\n\n```dockerfile\nFROM ubuntu:22.04\nRUN apt-get update\nRUN apt-get -y install incron\nRUN apt-get -y install git\n```\n\nAfter you save the file run the following:\n\n```bash\n# Create image\ndocker build -t auto-version-control-demo .\n#Start and enter in container\ndocker run -it --entrypoint bash auto-version-control-demo\n```\n\nI've given my image the name of `auto-version-control-demo`, you can call yours whatever you like.\n\nBy now you are already in the running container, `incron` is installed and you just have to update `/etc/incron.allow` before starting the service:\n\n```bash\necho 'root' >> /etc/incron.allow\n```\n\nNow you can start the service:\n\n```bash\n/etc/init.d/incron start\n* Starting File system events scheduler\n```\n\nYour `incron` service is running now. You can confirm by:\n\n```bash\n/etc/init.d/incron status\n* incron is running\n```\n\nAfter the start of the service we have to create a new entry for the `root` user. Currently there are none:\n\n```bash\nincrontab -l\nno table for root\n```\n\nTo create new entry we need the following:\n\n```bash\n<path>  <mask>  <command>\n```\n\nWhere `path` is the location of the file or folder on the machine we want to monitor, the `mask` is the event we want to listen for and the `command` is the action we want to apply. In this demo we want to monitor the `/cdn/content` folder. The events we want to listen for are `IN_MODIFY,IN_CREATE,IN_DELETE,IN_MOVE` and we want to run the commands from a bash script which we'll call `cdn-auto-version.sh` and place in the `/` root folder. This will be the content of the `cdn-auto-version.sh`:\n\n```bash\n#!/bin/bash\n\nPROJECT_FOLDER=/cdn/content\n\ncd $PROJECT_FOLDER\ngit pull\ngit add .\ngit commit -m \"Updated on $(date +'%d-%m-%y') at $(date +'%T') UTC\"\ngit push\n```\n\nNext we have to make the script executable. Make sure you're in the root folder:\n\n```bash\ncd /\nchmod 755 cdn-auto-version.sh\n```\n\nℹ️ You will also have to add ssh keys in `/.ssh` for the repository you will be working with. I am not going to touch on this in the article but there is plenty of material in Google on how to do this.\n\nWith all this done we are ready to create our `incrontab` entry. Execute\n\n```bash\nincrontab -e\n```\n\nThis will open the vim text editor. Press the `i` key an paste:\n\n```bash\n/cdn/content IN_MODIFY,IN_CREATE,IN_DELETE,IN_MOVE /cdn-auto-version.sh\n```\n\nHit `Esc` and then type `:x` and `Enter`. This will save your changes:\n\n```bash\ntable updated\n```\n\nTo ensure you have updated the table:\n\n```bash\nincrontab  -l\n/cdn/content\tIN_MODIFY,IN_CREATE,IN_DELETE,IN_MOVE\t/cdn-auto-version.sh\n```\n\nWith this `/cdn/content` will automatically update the remote repo you've set up every time there are changes to the files or folders within.\n\nI have used this post as a reference on how to set up and work with `incron`:  \nhttps://www.geeksforgeeks.org/incron-command-in-linux-with-examples/\n"}},"__N_SSG":true}